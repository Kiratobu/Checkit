# Generated by Django 4.0.5 on 2022-07-05 05:46

from typing import List

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies: List = []

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notifications",
                    models.CharField(
                        choices=[
                            ("five_minutes", "За 5 минут до события"),
                            ("ten_minutes", "За 10 минут до события"),
                            ("fifteen_minutes", "За 15 минут до события"),
                            ("thirty_minutes", "За 30 минут до события"),
                            ("one_hour", "За час до события"),
                            ("three_hours", "За 3 часа до события"),
                            ("one_day", "За день до события"),
                            ("three_days", "За 3 дня до события"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Repeat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "repetition",
                    models.CharField(
                        choices=[
                            ("MON", "Каждый Понедельник"),
                            ("TUE", "Каждый Вторник"),
                            ("WED", "Каждую Среду"),
                            ("THU", "Каждый Четверг"),
                            ("FRI", "Каждую Пятницу"),
                            ("SAT", "Каждую Субботу"),
                            ("SUN", "Каждое Воскресенье"),
                            ("ED", "Каждый день"),
                            ("EW", "Каждую неделю"),
                            ("EM", "Каждый месяц"),
                            ("EY", "Каждый год"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TimeStamp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "timestamp_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="account.timestamp",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=20)),
                ("number", models.CharField(max_length=20, unique=True)),
                ("email", models.CharField(max_length=30, unique=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "img",
                    models.ImageField(
                        blank=True, default=None, null=True, upload_to=""
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("account.timestamp", models.Model),
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "timestamp_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="account.timestamp",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Заголовок"),
                ),
                ("date", models.DateField(verbose_name="Дата события")),
                (
                    "description",
                    models.TextField(null=True, verbose_name="Описание"),
                ),
                ("time_from", models.TimeField(verbose_name="Время начала")),
                ("time_to", models.TimeField(verbose_name="Время окончания")),
                (
                    "is_private",
                    models.BooleanField(
                        default=True, verbose_name="Является личным событием"
                    ),
                ),
            ],
            bases=("account.timestamp",),
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "timestamp_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="account.timestamp",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Заголовок"),
                ),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "capacity",
                    models.PositiveIntegerField(verbose_name="Вместимость"),
                ),
                ("is_available", models.BooleanField(verbose_name="Доступно")),
                (
                    "has_projector",
                    models.BooleanField(verbose_name="Имеется проектор"),
                ),
                (
                    "has_desk",
                    models.BooleanField(verbose_name="Имеется доска"),
                ),
            ],
            bases=("account.timestamp",),
        ),
        migrations.CreateModel(
            name="UserParticipant",
            fields=[
                (
                    "timestamp_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="account.timestamp",
                    ),
                ),
                (
                    "is_creator",
                    models.BooleanField(
                        unique=True, verbose_name="Является организатором"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("accepted", "Принято"),
                            ("declined", "Отклонено"),
                            ("deligated", "Делегировано"),
                        ],
                        max_length=100,
                        verbose_name="Статус мероприятия",
                    ),
                ),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.event",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=("account.timestamp",),
        ),
        migrations.CreateModel(
            name="ImageRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "id_room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.room",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Заголовок"),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("R", "Красный"),
                            ("G", "Зелёный"),
                            ("B", "Синий"),
                            ("Y", "Жёлтый"),
                            ("O", "Оранжевый"),
                            ("P", "Фиолетовый"),
                        ],
                        max_length=255,
                        verbose_name="Цвет",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="event_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="account.eventtype",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="notification",
            field=models.ManyToManyField(to="account.notification"),
        ),
        migrations.AddField(
            model_name="event",
            name="repeat",
            field=models.ManyToManyField(to="account.repeat"),
        ),
        migrations.AddField(
            model_name="event",
            name="room_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="account.room"
            ),
        ),
    ]
